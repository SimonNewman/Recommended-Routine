{"version":3,"sources":["Exercise.js","Log.js","Progression.js","Routine.js","Workout.js","app.js"],"names":["Exercise","exercise","id","name","type","weight","reps","getHistory","history","sets","workouts","forEach","workout","exercises","find","push","getLastSets","view","$","html","displayScreen","calculateNextSets","minReps","maxReps","promotion","nextSets","nextReps","reduce","a","b","i","averageReps","Math","floor","leftOverReps","getExercise","viewExercise","viewExercises","Log","Progression","progression","getProgression","progressions","viewProgression","viewProgressions","Routine","routine","getProgressions","progressionIds","Set","getExercises","getNextWorkout","nextWorkout","Workout","getRoutine","routines","viewRoutine","viewRoutines","routineId","getWorkouts","filter","getLastWorkout","lastWorkout","currentScreen","exerciseNumber","seconds","currentExercise","setsCompleted","rest","doneSound","Audio","loop","defaultTimer","defaultReps","db","PouchDB","aWorkout","_id","Date","toISOString","completed","showData","JSON","stringify","localStorage","deleteData","r","confirm","clear","slugify","string","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","ajax","cache","dataType","url","success","result","exerciseData","error","progressionData","routineData","allDocs","include_docs","attachments","then","rows","log","doc","err","console","screen","hide","show","css","startTime","endTime","start","end","timeDiff"],"mappings":"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","file":"routine.js","sourcesContent":["function Exercise(exercise) {\r\n  this.id     = exercise.id;\r\n  this.name   = exercise.name;\r\n  this.type   = exercise.type;\r\n  this.weight = exercise.weight;\r\n  this.reps   = exercise.reps;\r\n\r\n  // Get history\r\n  this.getHistory = function() {\r\n    let history = [];\r\n    let sets = [];\r\n    workouts.forEach(workout => {\r\n      sets = workout.exercises.find(exercise => exercise.id === this.id);\r\n      if (sets != null) history.push(sets);\r\n    });\r\n    return history;\r\n  };\r\n\r\n  // Get the last sets\r\n  this.getLastSets = function() {\r\n    return this.getHistory()[0];\r\n  };\r\n\r\n  // View exercise\r\n  this.view = function() {\r\n    $('.screen.exercise #exercise-title').html(this.name);\r\n    let html = `\r\n      <p>ID: ${this.id}<br>\r\n      Type: ${this.type}<br>\r\n      Reps: ${this.reps}</p>\r\n    `;\r\n    $('.screen.exercise .content').html(html);\r\n    html = '<h3>History</h3>';\r\n    this.getHistory().forEach(history => {\r\n      html += '<div>';\r\n      history.sets.forEach(reps => {\r\n        html += `<span>${reps}</span>`;\r\n      });\r\n      html += '</div>';\r\n    });\r\n    $('.screen.exercise .list').html(html);\r\n\r\n    //console.log(this.calculateNextSets(3, 5, 8));\r\n    displayScreen('exercise');\r\n  };\r\n\r\n  this.calculateNextSets = function(sets, minReps, maxReps) {\r\n    let promotion = false;\r\n    let nextSets = [];\r\n    let nextReps = 0;\r\n    if (this.getLastSets()) {\r\n      nextReps = this.getLastSets().sets.reduce((a, b) => a + b, 0) + 1;\r\n    } else {\r\n      for (let i = 0; i < sets; i++) {\r\n        nextSets.push(minReps);\r\n      }\r\n      return {\r\n        promotion: promotion,\r\n        nextSets: nextSets\r\n      };\r\n    }\r\n\r\n    if (nextReps > sets * maxReps) {\r\n      promotion = true;\r\n    }\r\n\r\n    let averageReps = Math.floor(nextReps / sets);\r\n    let leftOverReps = nextReps - (sets * averageReps);\r\n    for (let i = 0; i < sets; i++) {\r\n      nextSets.push(averageReps);\r\n    }\r\n    for (let i = 0; i < leftOverReps; i++) {\r\n      nextSets[i] = nextSets[i] + 1;\r\n    }\r\n\r\n    return {\r\n      promotion: promotion,\r\n      nextSets: nextSets\r\n    };\r\n  };\r\n}\r\n\r\n// Get exercise\r\nfunction getExercise(id) {\r\n  return exercises.find(exercise => exercise.id === id);\r\n}\r\n\r\n// View exercise\r\nfunction viewExercise(id) {\r\n  let exercise = getExercise(id);\r\n  exercise.view();\r\n}\r\n\r\n// View all exercises\r\nfunction viewExercises() {\r\n  let html = '';\r\n  exercises.forEach((exercise) => {\r\n    html += `<li onclick=\"viewExercise(${exercise.id})\">${exercise.name}</li>`;\r\n  });\r\n  $('.screen.exercises .list').html(html);\r\n  displayScreen('exercises');\r\n}\r\n","function Log() {\r\n\r\n}","function Progression(progression) {\r\n  this.id        = progression.id;\r\n  this.name      = progression.name;\r\n  this.exercises = [];\r\n\r\n  progression.exercises.forEach(id => {\r\n    this.exercises.push(getExercise(id));\r\n  });\r\n\r\n  this.view = function() {\r\n    $('.screen.progression #progression-title').html(this.name);\r\n    let html = '';\r\n    this.exercises.forEach((exercise) => {\r\n      html += `<li onclick=\"viewExercise(${exercise.id})\">${exercise.name}</li>`;\r\n    });\r\n    $('.screen.progression .list').html(html);\r\n    displayScreen('progression');\r\n  };\r\n}\r\n\r\n// Get progression\r\nfunction getProgression(id) {\r\n  return progressions.find(progression => progression.id === id);\r\n}\r\n\r\n// View progression\r\nfunction viewProgression(id) {\r\n  let progression = getProgression(id);\r\n  progression.view();\r\n}\r\n\r\n// View all progressions\r\nfunction viewProgressions() {\r\n  let html = '';\r\n  progressions.forEach((progression) => {\r\n    html += `<li onclick=\"viewProgression(${progression.id})\">${progression.name}</li>`;\r\n  });\r\n  $('.screen.progressions .list').html(html);\r\n  displayScreen('progressions');\r\n}","function Routine(routine) {\r\n  this.id           = routine.id;\r\n  this.name         = routine.name;\r\n  this.minReps      = routine.minReps;\r\n  this.maxReps      = routine.maxReps;\r\n  this.routine      = [];\r\n  this.progressions = [];\r\n\r\n  routine.routine.forEach(progression => {\r\n    this.routine.push(getProgression(progression));\r\n  });\r\n\r\n  this.view = function() {\r\n    let html = '';\r\n    $('.screen.routine #routine-title').html(this.name);\r\n    $('.screen.routine .list').html(html);\r\n    displayScreen('routine');\r\n  };\r\n\r\n  this.getProgressions = function() {\r\n    let routine = [];\r\n    let progressionIds = [ ...new Set(routine.routine)];\r\n    progressionIds.forEach(id => {\r\n      routine.push(getProgression(id));\r\n    });\r\n  };\r\n\r\n  this.getExercises = function() {\r\n\r\n  };\r\n\r\n  this.getNextWorkout = function() {\r\n    let nextWorkout = new Workout(this.id).getNextWorkout();\r\n    return nextWorkout;\r\n  };\r\n}\r\n\r\n// Get routine\r\nfunction getRoutine(id) {\r\n  return routines.find(routine => routine.id === id);\r\n}\r\n\r\n// View routine\r\nfunction viewRoutine(id) {\r\n  let routine = getRoutine(id);\r\n  routine.view();\r\n}\r\n\r\n// View all routines\r\nfunction viewRoutines() {\r\n  let html = '';\r\n  routines.forEach((routine) => {\r\n    html += `<li onclick=\"viewRoutine(${routine.id})\">${routine.name}</li>`;\r\n  });\r\n  $('.screen.routines .list').html(html);\r\n  displayScreen('routines');\r\n}\r\n","function Workout(routineId) {\r\n  let routine = getRoutine(routineId);\r\n\r\n  this.routineId = routine.id;\r\n\r\n  this.getWorkouts = function() {\r\n    return workouts.filter(workout => workout.routineId === this.routineId);\r\n  };\r\n\r\n  this.getLastWorkout = function() {\r\n    return workouts.find(workout => workout.routineId === this.routineId);\r\n  };\r\n\r\n  this.getNextWorkout = function() {\r\n    let lastWorkout = this.getLastWorkout();\r\n    return lastWorkout;\r\n  };\r\n}","let currentScreen = 'welcome';\r\n//let currentScreen = 'bodyline';\r\n//let currentScreen = 'strength';\r\nlet exerciseNumber,\r\n    seconds,\r\n    currentExercise,\r\n    setsCompleted = [],\r\n    //rest = 90,\r\n    rest = 1;\r\n\r\n// Sound\r\nconst doneSound = new Audio('sound/243020__plasterbrain__game-start.ogg');\r\ndoneSound.loop = false;\r\n\r\n//const defaultTimer = 10;\r\nconst defaultTimer = 1;\r\nconst defaultReps = 5;\r\n\r\nlet db = new PouchDB('workoutLog');\r\nlet aWorkout = {\r\n  _id: new Date().toISOString(),\r\n  exercises: [\r\n    {\r\n      id: 3,\r\n      reps: [7,6,5]\r\n    },\r\n    {\r\n      id: 8,\r\n      reps: [5,5,5]\r\n    },\r\n  ],\r\n  completed: true\r\n};\r\n/*\r\ndb.put(aWorkout, function callback(err, result) {\r\n  if (!err) {\r\n    console.log('Successfully posted a workout!');\r\n  }\r\n});\r\n*/\r\n\r\n\r\n\r\nfunction showData() {\r\n  $('.data').html(JSON.stringify(localStorage));\r\n}\r\n\r\nfunction deleteData() {\r\n  let r = confirm(\"Are you sure you want to delete all data?\");\r\n  if (r) {\r\n    localStorage.clear();\r\n  }\r\n}\r\n\r\nfunction slugify(string) {\r\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœøṕŕßśșțùúüûǘẃẍÿź·/_,:;'\r\n  const b = 'aaaaaaaaceeeeghiiiimnnnooooooprssstuuuuuwxyz------'\r\n  const p = new RegExp(a.split('').join('|'), 'g')\r\n\r\n  return string.toString().toLowerCase()\r\n    .replace(/\\s+/g, '-') // Replace spaces with -\r\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\r\n    .replace(/&/g, '-and-') // Replace & with 'and'\r\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\r\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\r\n    .replace(/^-+/, '') // Trim - from start of text\r\n    .replace(/-+$/, '') // Trim - from end of text\r\n}\r\n\r\n// Get Exercises\r\nlet exercises = [];\r\n$.ajax({\r\n  type: 'GET',\r\n  cache: true,\r\n  dataType: 'json',\r\n  url: 'data/exercises.json',\r\n  success: function(result) {\r\n    result.forEach((exerciseData) => {\r\n      let exercise = new Exercise(exerciseData);\r\n      exercises.push(exercise);\r\n    });\r\n  },\r\n  error: function() {\r\n\r\n  }\r\n});\r\n\r\n// Get Progressions\r\nlet progressions = [];\r\n$.ajax({\r\n  type: 'GET',\r\n  cache: true,\r\n  dataType: 'json',\r\n  url: 'data/progressions.json',\r\n  success: function(result) {\r\n    result.forEach((progressionData) => {\r\n      let progression = new Progression(progressionData);\r\n      progressions.push(progression);\r\n    });\r\n  },\r\n  error: function() {\r\n\r\n  }\r\n});\r\n\r\n// Get Routines\r\nlet routines = [];\r\n$.ajax({\r\n  type: 'GET',\r\n  cache: true,\r\n  dataType: 'json',\r\n  url: 'data/routines.json',\r\n  success: function(result) {\r\n    result.forEach((routineData) => {\r\n      let routine = new Routine(routineData);\r\n      routines.push(routine);\r\n    });\r\n  },\r\n  error: function() {\r\n\r\n  }\r\n});\r\n\r\n// Get Workouts\r\nlet workouts = [];\r\ndb.allDocs({\r\n  include_docs: true,\r\n  attachments: true\r\n}).then((result) => {\r\n  result.rows.forEach((log) => {\r\n    workouts.push(log.doc);\r\n  });\r\n}).catch(function (err) {\r\n  console.log(err);\r\n});\r\n\r\n// Display screen\r\nfunction displayScreen(screen) {\r\n  $('.screen:not(.' + screen + ')').hide();\r\n  $('.screen.' + screen).show().css('display', 'flex');\r\n  currentScreen = screen;\r\n}\r\n\r\ndisplayScreen(currentScreen);\r\n\r\n/*\r\n// Update workout\r\ndb.get('2019-06-23T15:52:57.677Z').then(function(doc) {\r\n  return db.put({\r\n    _id: '2019-06-23T15:52:57.677Z',\r\n    _rev: '5-454d64291a6a9996a414e9ceb8e8ddbc',\r\n    routineId: 1,\r\n    exercises: [\r\n      {\r\n        id: 3,\r\n        sets: [3,4,4]\r\n      },\r\n      {\r\n        id: 8,\r\n        sets: [5,5,5]\r\n      }\r\n    ]\r\n  });\r\n}).then(function(response) {\r\n  // handle response\r\n}).catch(function (err) {\r\n  console.log(err);\r\n});\r\n*/\r\n\r\n/*\r\n// Example create\r\ndb.put({\r\n  _id: new Date().toJSON(),\r\n  routineId: 1,\r\n  exercises: [\r\n    {\r\n      id: 3,\r\n      sets: [3,2,4]\r\n    },\r\n    {\r\n      id: 8,\r\n      sets: [4,5,5]\r\n    }\r\n  ]\r\n}).then(function (response) {\r\n  // handle response\r\n}).catch(function (err) {\r\n  console.log(err);\r\n});\r\n*/\r\n\r\nlet startTime, endTime;\r\n\r\nfunction start() {\r\n  startTime = new Date();\r\n}\r\n\r\nfunction end() {\r\n  endTime = new Date();\r\n  let timeDiff = endTime - startTime;\r\n  console.log(timeDiff + \" ms\");\r\n}"]}